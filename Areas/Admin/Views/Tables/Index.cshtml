@model ASM_1.Models.Food.TableManagementViewModel

@{
    ViewData["Title"] = "Danh s√°ch b√†n";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold text-primary">üçΩÔ∏è Qu·∫£n l√Ω b√†n</h2>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Th√™m b√†n m·ªõi
        </a>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <span class="fw-semibold">Danh s√°ch b√†n hi·ªán c√≥</span>
            <form asp-action="GenerateAll" method="post" class="mb-0">
                @Html.AntiForgeryToken()
                <button class="btn btn-outline-primary btn-sm">
                    <i class="bi bi-qr-code"></i> T·∫°o QR cho t·∫•t c·∫£ b√†n
                </button>
            </form>
        </div>
        <div class="card-body">
            <form asp-action="Merge" method="post">
                @Html.AntiForgeryToken()
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-primary text-center">
                            <tr>
                                <th style="width:40px;"><input type="checkbox" id="selectAll" class="form-check-input" /></th>
                                <th>T√™n b√†n</th>
                                <th>S·ªë gh·∫ø</th>
                                <th>Tr·∫°ng th√°i</th>
                                <th>Gi√° ƒë·ªông</th>
                                <th>Thao t√°c</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var table in Model.Tables.OrderBy(t => t.TableName))
                            {
                                var statusClass = table.Status?.StartsWith("Merged") == true ? "text-warning fw-bold" : table.Status == "Available" ? "text-success fw-bold" : "text-danger fw-bold";
                                <tr class="text-center">
                                    <td>
                                        <input type="checkbox" class="form-check-input table-checkbox" name="selectedTableIds" value="@table.TableId" />
                                    </td>
                                    <td class="fw-semibold text-start">@table.TableName</td>
                                    <td>@table.SeatCount</td>
                                    <td class="@statusClass">@table.Status</td>
                                    <td>
                                        @if (table.DynamicPriceFactor.HasValue)
                                        {
                                            <span class="badge bg-info text-dark">x@table.DynamicPriceFactor.Value.ToString("0.##")</span>
                                            if (!string.IsNullOrWhiteSpace(table.DynamicPriceLabel))
                                            {
                                                <div class="small text-muted">@table.DynamicPriceLabel</div>
                                            }
                                        }
                                        else
                                        {
                                            <span class="text-muted">Kh√¥ng</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@table.TableId" class="btn btn-sm btn-outline-info">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@table.TableId" class="btn btn-sm btn-outline-warning">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@table.TableId" class="btn btn-sm btn-outline-danger">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        </div>
                                        <form asp-action="SplitTable" method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="tableId" value="@table.TableId" />
                                            <button type="submit" class="btn btn-link btn-sm">T√°ch b√†n</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="row g-2 align-items-center mt-3">
                    <div class="col-md-4">
                        <input type="text" name="mergeLabel" class="form-control" placeholder="Ghi ch√∫ nh√≥m b√†n (t√πy ch·ªçn)" />
                    </div>
                    <div class="col-md-4">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-link-45deg"></i> G·ªôp b√†n ƒë√£ ch·ªçn
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-light fw-semibold">
            Nh√≥m b√†n ƒëang g·ªôp
        </div>
        <div class="card-body">
            @if (Model.ActiveMerges.Any())
            {
                <div class="list-group">
                    @foreach (var group in Model.ActiveMerges.OrderBy(g => g.CreatedAt))
                    {
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="mb-1">@group.DisplayName</h6>
                                <div class="small text-muted">
                                    B√†n: @string.Join(", ", group.Tables.Select(t => t.TableName))
                                </div>
                                @if (!string.IsNullOrWhiteSpace(group.Label))
                                {
                                    <div class="small">Ghi ch√∫: @group.Label</div>
                                }
                            </div>
                            <form asp-action="SplitGroup" method="post" class="mb-0">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="groupId" value="@group.GroupId" />
                                <button type="submit" class="btn btn-outline-danger btn-sm">
                                    <i class="bi bi-scissors"></i> T√°ch nh√≥m
                                </button>
                            </form>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-muted mb-0">Ch∆∞a c√≥ nh√≥m b√†n n√†o ƒë∆∞·ª£c g·ªôp.</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const selectAll = document.getElementById('selectAll');
            const checkboxes = document.querySelectorAll('.table-checkbox');
            if (selectAll) {
                selectAll.addEventListener('change', function () {
                    checkboxes.forEach(cb => cb.checked = selectAll.checked);
                });
            }
        });
    </script>
}
