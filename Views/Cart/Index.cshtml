@model List<ASM_1.Models.Food.CartItem>
@{
    ViewData["Title"] = "Giỏ hàng";
    var totalItems = Model?.Sum(x => x.Quantity) ?? 0;
    var subtotal = Model?.Sum(x => x.UnitPrice * x.Quantity) ?? 0m;
    var tableCode = Context.Session.GetString("CurrentTableCode");
    var hasItems = Model != null && Model.Any();
}

@section Styles {
    <link rel="stylesheet" href="~/css/pages/cart.css" asp-append-version="true" />
    <style>
        /* ===== Trạng thái đơn: List & Card ===== */
        .order-list {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .order-card {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 16px 18px;
            background: var(--white, #fff);
            border: 1px solid #e9ecef;
            border-radius: 12px;
            box-shadow: var(--shadow, 0 8px 24px rgba(17, 24, 39, .06));
            text-decoration: none;
            color: inherit;
            transition: .18s ease;
        }

            .order-card:hover {
                transform: translateY(-1px);
                box-shadow: 0 12px 28px rgba(17,24,39,.08);
            }

        /* Left */
        .oc-left {
            display: flex;
            flex-direction: column;
            gap: 6px;
        }

        .oc-code {
            font-weight: 800;
            font-size: 1.15rem;
            letter-spacing: .2px;
            color: #0b1320;
        }

        .oc-mini {
            display: flex;
            gap: 16px;
            color: #6c757d;
            font-size: .92rem;
            align-items: center;
        }

            .oc-mini i {
                width: 16px;
                text-align: center;
            }

        /* Right */
        .oc-right {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .oc-sum {
            font-weight: 800;
            font-size: 1.15rem;
            color: #111;
        }

        /* Badge (trạng thái) */
        .badge-pill {
            display: inline-block;
            padding: 8px 12px;
            border-radius: 999px;
            font-weight: 700;
            font-size: .9rem;
            white-space: nowrap;
        }

        .badge-PENDING {
            background: #f1f3f5;
            color: #333;
        }

        .badge-CONFIRMED {
            background: #e6f4ea;
            color: #155724;
        }

        .badge-IN_KITCHEN {
            background: #fff3cd;
            color: #856404;
        }
        /* Đang chế biến */
        .badge-READY {
            background: #e1ecff;
            color: #004085;
        }
        /* Sẵn sàng */
        .badge-SERVED {
            background: #f1f3f5;
            color: #383d41;
        }

        .badge-REQUESTED_BILL {
            background: #ffeeba;
            color: #856404;
        }

        .badge-PAID {
            background: #d4edda;
            color: #155724;
        }

        .badge-CANCELLED {
            background: #f8d7da;
            color: #721c24;
        }

        /* Empty state (dùng style giống empty-cart) */
        .order-empty .empty-cart-content i {
            font-size: 3rem;
            color: #ccc;
            margin-bottom: 12px;
        }
    </style>
}

<div class="cart-page">
    <div class="container">
        <!-- Breadcrumb -->
        <nav class="breadcrumb">
            <a asp-controller="Food" asp-action="Index" asp-route-tableCode="@tableCode">Trang chủ</a>
            <span class="separator">></span>
            <span class="current">Giỏ hàng</span>
        </nav>

        <!-- Tabs -->
        <div class="cart-tabs">
            <a class="tab-btn active" data-tab="tab-items">
                <i class="fa-solid fa-bag-shopping"></i> Giỏ hàng
            </a>
            <a class="tab-btn" data-tab="tab-status">
                <i class="fa-solid fa-clipboard-list"></i> Trạng thái đơn
            </a>
        </div>

        <!-- TAB 1: Giỏ hàng -->
        <div id="tab-items" class="tab-content active">
            @if (hasItems)
            {
                <div class="cart-content">
                    <!-- Cart Items -->
                    <div class="cart-items-section">
                        <div class="cart-header">
                            <h2>Danh sách món ăn (@totalItems món)</h2>
                            <form asp-controller="Cart" asp-action="ClearCart" asp-route-tableCode="@tableCode" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn-clear-cart">
                                    <i class="fas fa-trash"></i> Xóa tất cả
                                </button>
                            </form>
                        </div>

                        <div class="cart-items" id="cartItemsList">
                            @foreach (var item in Model)
                            {
                                <div class="cart-item" data-id="@item.CartItemID">
                                    <div class="item-image">
                                        <img src="@Url.Content(item.ProductImage)" alt="@item.ProductName" />
                                    </div>

                                    <div class="item-details">
                                        <h3 class="item-name">@item.ProductName</h3>

                                        <!-- Tuỳ chọn động -->
                                        <div class="item-options">
                                            @if (item.Options != null && item.Options.Any())
                                            {
                                                foreach (var opt in item.Options)
                                                {
                                                    <span class="option">@opt.OptionTypeName: @opt.OptionName</span>
                                                }
                                            }
                                            else
                                            {
                                                <span class="option">Không có tùy chọn</span>
                                            }
                                            <span class="note">Ghi chú: @(string.IsNullOrWhiteSpace(item.Note) ? "Không có ghi chú" : item.Note)</span>
                                        </div>

                                        <div class="item-price">
                                            <span class="unit-price">@item.UnitPrice.ToString("N0") VNĐ/món</span>
                                        </div>
                                    </div>

                                    <div class="item-controls">
                                        <div class="quantity-controls">
                                            <!-- Giảm 1 -->
                                            <form asp-controller="Cart"
                                                  asp-action="ChangeQuantity"
                                                  asp-route-cartItemId="@item.CartItemID"
                                                  asp-route-delta="-1"
                                                  asp-route-tableCode="@tableCode"
                                                  method="post">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="qty-btn minus" aria-label="Giảm">-</button>
                                            </form>

                                            <!-- Số lượng -->
                                            <input type="number" class="quantity" value="@item.Quantity" min="1" max="10" readonly />

                                            <!-- Tăng 1 -->
                                            <form asp-controller="Cart"
                                                  asp-action="ChangeQuantity"
                                                  asp-route-cartItemId="@item.CartItemID"
                                                  asp-route-delta="1"
                                                  asp-route-tableCode="@tableCode"
                                                  method="post">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="qty-btn plus" aria-label="Tăng">+</button>
                                            </form>
                                        </div>

                                        <div class="item-total">
                                            <span class="total-price">@item.TotalPrice.ToString("N0") VNĐ</span>
                                        </div>

                                        <!-- Xóa món -->
                                        <form asp-controller="Cart"
                                              asp-action="RemoveFromCart"
                                              asp-route-cartItemId="@item.CartItemID"
                                              asp-route-tableCode="@tableCode"
                                              method="post">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn-remove" title="Xóa món">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="continue-shopping">
                            <a asp-controller="Food" asp-action="Index" asp-route-tableCode="@tableCode" class="btn-continue">
                                <i class="fas fa-arrow-left"></i> Tiếp tục mua sắm
                            </a>
                        </div>
                    </div>

                    <!-- Cart Summary & Checkout -->
                    <div class="cart-summary-section">
                        <div class="cart-summary">
                            <h3>Tóm tắt đơn hàng</h3>
                            <div class="summary-details">
                                <div class="summary-row">
                                    <span>Tạm tính (@totalItems món):</span>
                                    <span>@subtotal.ToString("N0") VNĐ</span>
                                </div>
                                <div class="summary-row total">
                                    <span>Tổng cộng:</span>
                                    <span class="total-amount">@(subtotal.ToString("N0")) VNĐ</span>
                                </div>
                            </div>

                            <form id="checkoutForm" asp-controller="Cart" asp-action="PlaceOrder" asp-route-tableCode="@tableCode" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn-checkout">Xác nhận</button>
                            </form>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="empty-cart">
                    <div class="empty-cart-content">
                        <i class="fas fa-shopping-cart"></i>
                        <h2>Giỏ hàng của bạn đang trống</h2>
                        <a asp-controller="Food" asp-action="Index" asp-route-tableCode="@tableCode" class="btn-shop-now">
                            <i class="fas fa-utensils"></i> Đặt món ngay
                        </a>
                    </div>
                </div>
            }
        </div>

        <!-- TAB 2: Trạng thái đơn (Nhiều đơn) -->
        <div id="tab-status" class="tab-content"
             data-table-code="@Context.Session.GetString("CurrentTableCode")">
            <div class="cart-items-section">
                <div class="order-status-header">
                    <div class="os-left">
                        <h2>Tiến trình đơn</h2>
                    </div>
                </div>

                <!-- Danh sách đơn (render bằng JS) -->
                <div class="order-list" id="order-list">
                    <!-- các .order-card sẽ được nạp ở đây -->
                </div>

                <!-- Trạng thái rỗng -->
                <div class="order-empty" id="order-empty" style="display:none">
                    <div class="empty-cart-content">
                        <i class="fas fa-clipboard-list"></i>
                        <h2>Chưa có đơn nào</h2>
                        <p>Bạn có thể đặt món và theo dõi trạng thái tại đây.</p>
                        <a asp-controller="Food" asp-action="Index"
                           asp-route-tableCode="@Context.Session.GetString("CurrentTableCode")"
                           class="btn-shop-now">
                            <i class="fas fa-utensils"></i> Đặt món ngay
                        </a>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script>
        (() => {
          // ===== Tabs =====
          const tabButtons = document.querySelectorAll('.cart-tabs .tab-btn');
          tabButtons.forEach(btn => {
            btn.addEventListener('click', () => {
              tabButtons.forEach(b => b.classList.remove('active'));
              document.querySelectorAll('.tab-content').forEach(t => t.classList.remove('active'));
              btn.classList.add('active');
              const pane = document.getElementById(btn.dataset.tab);
              if (pane) pane.classList.add('active');

              if (btn.dataset.tab === 'tab-status') startOrdersPolling();
              else stopOrdersPolling();
            });
          });

          // ===== Disable button khi submit checkout =====
          const checkoutForm = document.getElementById('checkoutForm');
          if (checkoutForm) {
            checkoutForm.addEventListener('submit', function () {
              const btn = checkoutForm.querySelector('.btn-checkout');
              if (btn) {
                btn.disabled = true;
                btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang xử lý...';
              }
            });
          }

          // ===== Trạng thái đơn: list nhiều đơn =====
          const tabStatus = document.getElementById('tab-status');
          const listEl = document.getElementById('order-list');
          const emptyEl = document.getElementById('order-empty');
          const tableCode = tabStatus?.dataset.tableCode;

          const money = v => (Number(v||0)).toLocaleString('vi-VN') + ' đ';
          const tstr = iso => {
            const d = new Date(iso);
            const hh = d.toLocaleTimeString('vi-VN', { hour12:false });
            const dd = d.toLocaleDateString('vi-VN');
            return `${hh} ${dd}`;
          };
          const badgeClass = s => `badge-pill badge-${(s||'').toUpperCase()}`;
          const badgeText = s => ({
            PENDING:'Đang gửi', CONFIRMED:'Đã xác nhận', IN_KITCHEN:'Đang chế biến',
            READY:'Sẵn sàng', SERVED:'Đã phục vụ', REQUESTED_BILL:'Yêu cầu tính tiền',
            PAID:'Đã thanh toán', CANCELLED:'Đã huỷ'
          }[(s||'').toUpperCase()] || '—');

          function renderList(items){
            if (!Array.isArray(items) || !items.length){
              listEl.innerHTML = '';
              emptyEl.style.display = 'block';
              return;
            }
            emptyEl.style.display = 'none';
            listEl.innerHTML = items.map(o => `
              <a class="order-card" href="/orders/details/${o.id}" aria-label="Xem chi tiết ${o.code}">
                <div class="oc-left">
                  <div class="oc-code">${o.code}</div>
                  <div class="oc-mini">
                    <span><i class="fa-regular fa-clock"></i> ${tstr(o.placedAt)}</span>
                    <span><i class="fa-solid fa-chair"></i> ${o.table}</span>
                  </div>
                </div>
                <div class="oc-right">
                  <div class="oc-sum">${money(o.sum)}</div>
                  <span class="${badgeClass(o.status)}">${badgeText(o.status)}</span>
                </div>
              </a>
            `).join('');
          }

          async function fetchOrders(){
            if (!tableCode){ renderList([]); return; }
            // Ưu tiên endpoint /cart/status/list?tableCode=...
            try{
              const res = await fetch(`/cart/status/list?tableCode=${encodeURIComponent(tableCode)}`, { cache:'no-store' });
              if (!res.ok) throw 0;
              const data = await res.json();
              renderList(Array.isArray(data) ? data : []);
            }catch{
              // Fallback: /cart/my-orders?tableCode=...
              try{
                const r2 = await fetch(`/cart/my-orders?tableCode=${encodeURIComponent(tableCode)}`, { cache:'no-store' });
                if (!r2.ok) throw 0;
                const data2 = await r2.json();
                renderList(Array.isArray(data2) ? data2 : []);
              }catch{
                renderList([]);
              }
            }
          }

          // Poll khi ở tab “Trạng thái đơn”
          let timer = null;
          function startOrdersPolling(){ stopOrdersPolling(); fetchOrders(); timer = setInterval(fetchOrders, 8000); }
          function stopOrdersPolling(){ if (timer) { clearInterval(timer); timer = null; } }

          // Nếu tab-status đang active ngay khi vào trang
          const activeTab = document.querySelector('.cart-tabs .tab-btn.active')?.dataset.tab;
          if (activeTab === 'tab-status') startOrdersPolling();
        })();
    </script>
}
