@model ASM_1.Models.Food.MenuOverviewViewModel

@{
    ViewData["Title"] = "FoodOrder - Trang Chủ";
    var tableCode = Context.Session.GetString("CurrentTableCode");
}

@section Styles {
    <link rel="stylesheet" href="~/css/pages/home.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/pages/menu-page.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/pages/bs5grid.css" asp-append-version="true" />
}

<section class="hero">
    <img src="~/Images/banner1.jpg" alt="Banner khuyến mãi" />
    <div class="hero-content">
        <h1>Đặt đồ ăn ngon - Giao hàng nhanh</h1>
        <p>Thưởng thức những món ăn tuyệt vời từ chúng tôi</p>
    </div>
</section>

<section class="highlights">
    <div class="container">

        <!-- Header -->
        <div class="menu-header">
            <h2 class="menu-title">Thực đơn của chúng tôi</h2>
            <p class="menu-subtitle">Khám phá những món ăn đặc sắc và hương vị tuyệt vời</p>
        </div>

        <!-- =================== CATEGORY BAR =================== -->
        <div class="menu-categories">
            <button class="active category-btn" data-category="0">
                <i class="fas fa-th-large"></i> Tất cả
            </button>

            @foreach (var cat in Model.Categories)
            {
                <button class="category-btn" data-category="@cat.CategoryId">
                    <i class="fa fa-tags"></i> @cat.Name
                </button>
            }
        </div>

        <!-- Category Filter -->
        @* <div class="menu-categories">
        <button class="category-btn @(currentCategory == "all" ? "active" : "")" data-category="all">
            <i class="fas fa-th-large"></i>
            Tất cả
        </button>
        <button class="category-btn @(currentCategory == "com" ? "active" : "")" data-category="com">
            <i class="fas fa-bowl-rice"></i>
            Cơm
        </button>
        <button class="category-btn @(currentCategory == "pho" ? "active" : "")" data-category="pho">
            <i class="fas fa-bowl-food"></i>
            Phở
        </button>
        <button class="category-btn @(currentCategory == "banh-mi" ? "active" : "")" data-category="banh-mi">
            <i class="fas fa-bread-slice"></i>
            Bánh mì
        </button>
        <button class="category-btn @(currentCategory == "bun" ? "active" : "")" data-category="bun">
            <i class="fas fa-utensils"></i>
            Bún
        </button>
        <button class="category-btn @(currentCategory == "hu-tieu" ? "active" : "")" data-category="hu-tieu">
            <i class="fas fa-seedling"></i>
            Hủ tiếu
        </button>
        <button class="category-btn @(currentCategory == "do-uong" ? "active" : "")" data-category="do-uong">
            <i class="fas fa-coffee"></i>
            Đồ uống
        </button>
        <button class="category-btn @(currentCategory == "trang-mieng" ? "active" : "")" data-category="trang-mieng">
            <i class="fas fa-ice-cream"></i>
            Tráng miệng
        </button>
    </div> *@

        <!-- =================== COMBO SECTION =================== -->
        <div class="mb-5">
            <h3 class="fw-bold mb-3">
                <i class="bi bi-box-seam me-2 text-primary"></i> Combo nổi bật
            </h3>

            <div id="combo-section" class="row g-4">
                @foreach (var combo in Model.Combos)
                {
                    <div class="col-md-4 col-lg-3">
                        <a href="@Url.Action("Detail", "Food", new { tableCode = tableCode, slug = combo.Slug })"
                           style="text-decoration: none;"
                           class="menu-item-card combo-card"
                           data-category="@string.Join(",", combo.ComboDetails!.Select(cd => cd.FoodItem!.CategoryId).Distinct())">
                            <!-- Ảnh combo -->
                            @* <img src="@Url.Content(!string.IsNullOrEmpty(combo.ImageUrl) ? combo.ImageUrl : "~/images/no-image.png")"
                                 class="card-img-top"
                                 alt="@combo.ComboName"
                                 style="height:180px; object-fit:cover; border-bottom: 1px solid #eee;"> *@

                            <div class="menu-item-image-wrapper">
                                <div class="food-image">
                                    <img src="@Url.Content(!string.IsNullOrEmpty(combo.ImageUrl) ? combo.ImageUrl : "~/images/no-image.png")"
                                         alt="@combo.ComboName"
                                         class="menu-item-image">
                                    @* @if (combo.DiscountPercent > 0)
                                    {
                                        <div class="discount-badge">-@combo.DiscountPercent%</div>
                                    } *@
                                </div>
                                <div class="menu-item-overlay">
                                    <div class="btn-view-detail">
                                        <i class="fas fa-eye"></i>
                                        Xem chi tiết
                                    </div>
                                </div>
                            </div>

                            @* <div class="card-body d-flex flex-column">
                                <h5 class="card-title">@combo.ComboName</h5>
                                <h6 class="card-subtitle mb-2 text-muted">@combo.ComboPrice.ToString("C")</h6>

                                <ul class="small text-muted mb-3">
                                    @foreach (var name in combo.ComboDetails!.Select(cd => cd.FoodItem!.Name))
                                    {
                                        <li>@name</li>
                                    }
                                </ul>
                            </div> *@

                            <div class="menu-item-content">
                                <h3 class="menu-item-name">@combo.ComboName</h3>
                                <p class="menu-item-description">
                                    @combo.Description
                                </p>

                                @foreach (var name in combo.ComboDetails!.Select(cd => cd.FoodItem!.Name))
                                {
                                    <div class="menu-item-description">@("- " + @name)</div>
                                }

                                @* <div class="rating">
                                    <span class="stars">★★★★★</span>
                                    <span class="rating-text">(4.8)</span>
                                </div> *@

                                <div class="price-section">
                                    @* @if (combo.DiscountPrice > 0)
                                    {
                                        <span class="old-price">@combo.BasePrice.ToString("N0") VNĐ</span>
                                        <span class="price">
                                            @((combo.BasePrice * (100 - combo.DiscountPercent) / 100).ToString("N0")) VNĐ
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="price">@combo.BasePrice.ToString("N0") VNĐ</span>
                                    } *@
                                    <span class="price">@combo.ComboPrice.ToString("N0") VNĐ</span>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>
        </div>

        <!-- =================== FOOD SECTION =================== -->
        <div>
            <h3 class="fw-bold mb-3">
                <i class="bi bi-egg-fried me-2 text-warning"></i> Món ăn đơn
            </h3>

            <div id="menu" class="row g-4">

                @* Kiểu 1 onerror="this.src='/images/placeholder.jpg'"*@
                @* @foreach (var food in Model.FoodItems)
                {
                    <div class="col-md-4 col-lg-3">
                        <div class="food-card" data-category="@food.CategoryId">
                            <div class="food-image">
                                <img src="@Url.Content(food.ImageUrl)" alt="@food.Name" class="menu-item-image">
                                @if (food.DiscountPercent > 0)
                                {
                                    <div class="discount-badge">-@food.DiscountPercent%</div>
                                }
                            </div>
                            <div class="food-info">
                                <h3>@food.Name</h3>
                                <p>@food.Description</p>
                                <div class="rating">
                                    <span class="stars">★★★★★</span>
                                    <span class="rating-text">(4.8)</span>
                                </div>
                                <div class="price-section">
                                    @if (food.DiscountPrice > 0)
                                    {
                                        <span class="old-price">@food.BasePrice.ToString("N0") VNĐ</span>
                                        <span class="price">
                                            @((food.BasePrice * (100 - food.DiscountPercent) / 100).ToString("N0")) VNĐ
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="price">@food.BasePrice.ToString("N0") VNĐ</span>
                                    }
                                </div>
                                <div class="card-actions">
                                    <form asp-controller="Food" asp-action="Detail" asp-route-Slug="@food?.Slug">
                                        <button type="submit" class="btn-detail">Xem chi tiết</button>
                                    </form>
                                </div>

                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@food.Name</h5>
                            <p class="card-text text-muted mb-2">@food.BasePrice.ToString("C")</p>

                @* Kiểu 2 *@
                @foreach (var food in Model.FoodItems)
                {
                    <div class="col-md-4 col-lg-3">
                        <a href="@Url.Action("Detail", "Food", new { tableCode = tableCode, slug = food.Slug })" style="text-decoration: none;" class="menu-item-card" data-category="@food.CategoryId">
                            <div class="menu-item-image-wrapper">

                                <img src="@Url.Content(food.ImageUrl)" alt="@food.Name" class="menu-item-image">
                                @if (food.DiscountPercent > 0)
                                {
                                    <div class="discount-badge">-@food.DiscountPercent%</div>
                                }
                                <div class="menu-item-overlay">
                                    <div class="btn-view-detail">
                                        <i class="fas fa-eye"></i>
                                        Xem chi tiết
                                    </div>
                                </div>
                            </div>
                            <div class="menu-item-content">
                                <h4 class="menu-item-name">@food.Name</h4>
                                <p class="menu-item-description">@food.Description</p>
                                @* <div class="rating">
                                    <span class="stars">★★★★★</span>
                                    <span class="rating-text">(4.8)</span>
                                </div> *@
                                <div class="price-section">
                                    @if (food.DiscountPrice > 0)
                                    {
                                        <span class="old-price">@food.BasePrice.ToString("N0") VNĐ</span>
                                        <span class="price">
                                            @((food.BasePrice * (100 - food.DiscountPercent) / 100).ToString("N0")) VNĐ
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="price">@food.BasePrice.ToString("N0") VNĐ</span>
                                    }
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const buttons = document.querySelectorAll('.category-btn');
            const comboCards = document.querySelectorAll('.combo-card');
            const foodCards = document.querySelectorAll('.menu-item-card');
            const allCards = [...comboCards, ...foodCards];
            const grid = document.querySelector('#menuGrid');

            // === CSS animation style ===
            const style = document.createElement('style');
            style.textContent = `
                .menu-item-card, .combo-card {
                    opacity: 1;
                    transform: translateY(0);
                    transition: opacity 0.4s ease, transform 0.4s ease;
                }

                .fade-out {
                    opacity: 0;
                    transform: translateY(20px);
                }

                .fade-in {
                    opacity: 0;
                    transform: translateY(20px);
                }

                .fade-in.show {
                    opacity: 1;
                    transform: translateY(0);
                }

                .filtering {
                    opacity: 0.9;
                    pointer-events: none;
                }
            `;
            document.head.appendChild(style);

            // === Hàm lọc với animation mượt ===
            function filterMenuItemsSmooth(selectedCat) {
                if (grid) grid.classList.add('filtering');

                const showAfter = []; // lưu item cần hiện sau khi ẩn xong

                allCards.forEach((card) => {
                    const categories = card.dataset.category.split(',');
                    const isVisible = (selectedCat === "0" || categories.includes(selectedCat));

                    // Nếu không khớp danh mục -> ẩn
                    if (!isVisible && card.parentElement.style.display !== 'none') {
                        card.classList.remove('fade-in', 'show');
                        card.classList.add('fade-out');

                        // sau khi animation ẩn xong mới ẩn thật sự
                        setTimeout(() => {
                            card.parentElement.style.display = 'none';
                            card.classList.remove('fade-out');
                        }, 400);
                    }
                    // Nếu khớp danh mục -> thêm vào danh sách cần hiển thị sau
                    else if (isVisible) {
                        showAfter.push(card);
                    }
                });

                // Sau 400ms (ẩn xong) mới bắt đầu hiện món mới
                setTimeout(() => {
                    let delay = 0;
                    showAfter.forEach(card => {
                        card.parentElement.style.display = 'block';
                        card.classList.remove('fade-out');
                        card.classList.add('fade-in');
                        setTimeout(() => card.classList.add('show'), delay);
                        delay += 50; // xuất hiện dần
                    });

                    // Gỡ trạng thái filtering sau khi hoàn tất
                    setTimeout(() => {
                        if (grid) grid.classList.remove('filtering');
                    }, 500);
                }, 400);
            }

            // === Nút danh mục ===
            buttons.forEach(btn => {
                btn.addEventListener('click', () => {
                    const selectedCat = btn.dataset.category;

                    // Đổi trạng thái nút
                    buttons.forEach(b => b.classList.remove('btn-primary', 'active'));
                    buttons.forEach(b => b.classList.add('btn-outline-secondary'));
                    btn.classList.remove('btn-outline-secondary');
                    btn.classList.add('btn-primary', 'active');

                    // Gọi hàm lọc
                    filterMenuItemsSmooth(selectedCat);
                });
            });
        });
    </script>

    <script src="~/js/menu-page.js" asp-append-version="true"></script>
}
